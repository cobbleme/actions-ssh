使用 GitHub Actions 透過 SSH 執行 VPS 命令教學
1. 目標
利用 GitHub Actions 連線你的 VPS，並執行指定的命令，支援手動觸發（workflow_dispatch）或定時執行。

2. Workflow 範本
yaml
複製
編輯
name: One-Time VPS Command

on:
  workflow_dispatch:  # 手動執行

jobs:
  ssh-run:
    runs-on: ubuntu-latest

    steps:
      - name: 設定 SSH 金鑰
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: 在 VPS 執行命令
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            cd dc_bot && \
            java -jar JMusicBot-0.4.3.8.jar &
          "
備註

請將 SSH 私鑰放入 GitHub Secrets（名稱為 VPS_SSH_KEY）

將 VPS 主機與用戶名稱分別放在 Secrets 中（VPS_HOST 與 VPS_USER）

java -jar ... & 以背景執行，避免阻塞 workflow

3. 如何手動觸發 Workflow
進入 GitHub 倉庫頁面

點選上方「Actions」選單

選擇 One-Time VPS Command workflow

點擊右側「Run workflow」按鈕

選擇分支並按「Run workflow」開始執行

4. GitHub Actions 使用限制（免費方案）
公共倉庫：無限制免費使用

私人倉庫：每月 2000 分鐘免費額度

單次 Workflow 最長 6 小時

同時最多 20 個並行作業

5. 進階：定時觸發範例
yaml
複製
編輯
on:
  schedule:
    - cron: '0 3 * * *'  # UTC時間每天凌晨3點執行
以上是利用 GitHub Actions 連線 VPS，並執行多行命令的簡易範例及操作說明。歡迎依需求修改、擴充！
